1)
import math
import os
import random
import re
import sys

if __name__ == '__main__':
    n = int(input().strip())
    
    if n % 2 == 1:
        print("Weird")
    elif n % 2 == 0 and 2 <= n <= 5:
        print("Not Weird")
    elif n % 2 == 0 and 6 <= n <= 20:
        print("Weird")
    elif n % 2 == 0 and n > 20:
        print("Not Weird")


2)
if __name__ == '__main__':
    a = int(input())
    b = int(input())
print(a+b)
print(a-b)
print(a*b)


3)
if __name__ == '__main__':
    a = int(input())
    b = int(input())
print(a//b)
print(a/b)

4)
if __name__ == '__main__':
    n = int(input())
    for i in range(n):
        print(i * i)

5)
def is_leap(year):
    leap = False
    if (year % 4 == 0):
        if (year % 100 != 0) or (year % 400 == 0):
            leap = True
    return leap


year = int(input())
print(is_leap(year))

6)
if __name__ == '__main__':
    n = int(input())
    for i in range(1, n + 1):
        print(i, end='')
7)
# Read the number of elements in set A
n = int(input())

# Read elements of set A
A = set(map(int, input().split()))

# Read number of operations
num_ops = int(input())

# Loop through each operation
for _ in range(num_ops):
    # Read operation name and number of elements in the other set (we don't use the length)
    op, _ = input().split()
    
    # Read the other set
    other_set = set(map(int, input().split()))
    
    # Perform the operation on A
    if op == 'update':
        A.update(other_set)
    elif op == 'intersection_update':
        A.intersection_update(other_set)
    elif op == 'difference_update':
        A.difference_update(other_set)
    elif op == 'symmetric_difference_update':
        A.symmetric_difference_update(other_set)

# Print the sum of elements in final set A
print(sum(A))

8)if __name__ == '__main__':
    N = int(input())
    lst = []

    for _ in range(N):
        command = input().split()
        action = command[0]

        if action == "insert":
            lst.insert(int(command[1]), int(command[2]))
        elif action == "print":
            print(lst)
        elif action == "remove":
            lst.remove(int(command[1]))
        elif action == "append":
            lst.append(int(command[1]))
        elif action == "sort":
            lst.sort()
        elif action == "pop":
            lst.pop()
        elif action == "reverse":
            lst.reverse()
9)
my_string = "Hello, World!"
print(my_string)

10)
def swap_case(s):
    return  s.swapcase()


    
if __name__ == '__main__':
    s = input()
    result = swap_case(s)
    print(result)
